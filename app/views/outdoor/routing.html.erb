<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>

<% if notice %>
<p id="notice"><%= notice %></p>
<% end %>

<h1>Campus GPS</h1>
<%= link_to 'Login', login_url %>

<!-- searh box --> 
<%= form_tag outdoor_routing_path, :method => 'get' do %>
  <p>
  From: <%= text_field_tag :from, params[:from]%>
  </br>
  To: <nbsp><%= text_field_tag :to, params[:to]%>
  <%= submit_tag "GO", :name => nil %>
  </p>
  
<% end %>

<h1>Routing!</h1>
<table>

  <tbody>
    <tr>
      <td><h3>From</h3></td>
      <% if @building_from.nil? %> 
      <td>ERROR: first building does not exist</td>
      <% else %>
      <td><%= @building_from.name %></td>
      <td><%= image_tag(@building_from.photo, class: 'list_image') %></td>
      <% end %>
    </tr>
    <% if @paths %>
    <% @paths.each do |path| %>
    <tr>
      <td><%= path.distance %> unit</td>
      <td><%= path.description %></td>
    </tr>
    <% end %>
    <% end %>
    <tr>
      <td><h3>To</h3></td>
      <% if @building_to.nil? %> 
      <td>ERROR: second building does not exist</td>
      <% else %>
      <td><%= @building_to.name %></td>
      <td><%= image_tag(@building_to.photo, class: 'list_image') %></td>
      <% end %>
    </tr>
  </tbody>
</table>

<!-- google map -->

<div style='width: 800px;'>
  <div id="map" style='width: 800px; height: 400px;'></div>
</div>

<script type="text/javascript">
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
  polyline = [{"lat":42.36583329,"lng":-71.25857279},{"lat":42.36589671,"lng":-71.25911325},{"lat":42.36608299,"lng":-71.25907034},{"lat":42.36666959,"lng":-71.25947803},{"lat":42.36713728,"lng":-71.25915751},{"lat":42.36710161,"lng":-71.25910923}]
  <% if @paths %>
  handler.addPolyline(polyline); 
  handler.bounds.extend(polyline[0]);
  handler.bounds.extend(polyline[ polyline.length - 1]);
  <% end %>

  markers = handler.addMarkers(<%=raw @hash.to_json %>);

  <% if @building_from && @building_to && @building_from != @building_to %>
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  <% else %>
    handler.map.centerOn(markers[<%= @centerMarker %>]);
    handler.getMap().setZoom(17);
  <% end %>

});

</script>

