<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>

<!-- Geolocation --> 
<%= javascript_include_tag "geolocation.js" %> 

<% if notice %>
<p id="notice"><%= notice %></p>
<% end %>

<script>
var building_names = <%= raw @building_names %>;
$(function() {
  $( "#from" ).autocomplete({
    source: building_names,
    minLength: 2,
  });
  $( "#to" ).autocomplete({
    source: building_names,
    minLength: 2,
  });
});
</script>

<!-- instructions -->
<div class="container-fluid">

  <div class="row">
    <div class="col-md-8">
      <!-- google map -->
      <div id="map" style='height: 600px;'></div>
    </div>
    <div class="col-md-4">
      <div class="col-md-11 col-md-offset-1">  
        <div class="row">&nbsp;</div>
        <div class="row">    
          <div class="col-md-2">
            From:
          </div>
          <% if @building_from.nil? %> 
          <div class="col-md-4">
            ERROR: first building does not exist
          </div>
          <% else %>
          <div class="col-md-4">
            <%= @building_from.name %>
          </div>
          <div class="col-md-6">
            <%= image_tag(@building_from.photo, class: 'list_image') %>
          </div>
          <% end %>
        </div>        
        <div class="row">&nbsp;</div>
          <% if @paths %>
            <% @paths.each do |path| %>
              <div class="row">
                <div class="col-md-2"> <%= path.distance %> unit </div>
                <div class="col-md-10"> <%= path.description %> </div>
              </div>
            <% end %>
          <% end %>
        <div class="row">&nbsp;</div>
        <div class="row">
          <div class="col-md-2 col-md-offset-0">   
            To:  
          </div>
          <% if @building_to.nil? %>
          <div class="col-md-4">    
            ERROR: second building does not exist
          </div>
          <% else %>
          <div class="col-md-4">
            <%= @building_to.name %>
          </div>
          <div class="col-md-6">
            <%= image_tag(@building_to.photo, class: 'list_image') %>
          </div>
          <% end %>
        </div>
        <div class="row"> 
            <% if @has_floorplan %>            
              <%= link_to 'Enter building', indoor_index_url %>
            <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- searh box --> 
<%= form_tag outdoor_routing_path, :method => 'get', class: "form-inline", style: "position:absolute;left:80px;top:20px" do %>
  <div class="form-group">
    <label>From:</label>
    <%= text_field_tag :from, params[:from], type: "text", class: "form-control"%>
  </div>
  <div class="form-group">
    <label>To:</label>
    <%= text_field_tag :to, params[:to], type: "text", class: "form-control"%>
  </div>
  <%= submit_tag "GO", :name => nil, class: "btn btn-primary" %>
<% end %>

<!-- main menu -->
<nav class="navbar navbar-inverse navbar-fixed-bottom" style='height: 5px;'>
  <div class="container-fluid">
    <div class="row">
      <div class="col-sm-4">
        <%= link_to 'CampusGPS', outdoor_url %>
      </div>
      <div class="col-sm-4">
        <%= link_to 'Login', login_url %>
      </div>
      <div class="col-sm-4">
        <%= link_to 'Contact Us', login_url %>
      </div>
    </div>
  </div>
</nav>

<script type="text/javascript">
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
  polyline = []
  
  <% @locations.each do |loc| %>
    polyline[polyline.length] = {"lat": <%= loc.latitude %>, "lng": <%= loc.longitude %>}
  <% end %>

  <% if @paths %>
  handler.addPolyline(polyline); 
  handler.bounds.extend(polyline[0]);
  handler.bounds.extend(polyline[polyline.length - 1]);
  <% end %>

  markers = handler.addMarkers(<%=raw @hash.to_json %>);

  <% if @building_from && @building_to && @building_from != @building_to %>
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  <% else %>
    handler.map.centerOn(markers[<%= @centerMarker %>]);
    handler.getMap().setZoom(17);
  <% end %>

});

</script>

